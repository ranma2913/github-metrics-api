{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "http://example.com/example.json",
  "type": "object",
  "title": "HCP Vitals file schema.",
  "description": "Read more here: https://github.ranma2913.com/pages/ranma2913-engineering-experience/HCP-Documentation/engineering-excellence/overview",
  "oneOf": [
    {
      "examples": [
        {
          "apiVersion": "v1",
          "metadata": {
            "askId": [
              "AIDE_#######",
              "UHGWM###-######"
            ],
            "caAgileId": "poc",
            "projectKey": "com.ranma2913.yourapp.yourcomponent",
            "projectFriendlyName": "yourapp-yourcomponent",
            "componentType": "code",
            "targetQG": "GATE_00"
          }
        },
        {
          "apiVersion": "v1",
          "metadata": {
            "askId": "AIDE_#######",
            "caAgileId": "poc",
            "projectKey": "com.ranma2913.yourapp.yourcomponent",
            "projectFriendlyName": "yourapp-yourcomponent",
            "componentType": "code",
            "targetQG": "GATE_00"
          }
        },
        {
          "apiVersion": "v1",
          "metadata": {
            "askId": null,
            "caAgileId": "poc",
            "projectKey": "com.ranma2913.yourapp.yourcomponent",
            "projectFriendlyName": "yourapp-yourcomponent",
            "componentType": "code",
            "targetQG": "GATE_00"
          }
        }
      ],
      "required": [
        "apiVersion",
        "metadata"
      ],
      "properties": {
        "apiVersion": {
          "$id": "#/properties/apiVersion",
          "type": "string",
          "title": "Vitals file apiVersion",
          "description": "currently the only versions supported are in the enum field.",
          "enum": [
            "v1"
          ],
          "default": "",
          "examples": [
            "v1"
          ]
        },
        "metadata": {
          "$id": "#/properties/metadata",
          "type": "object",
          "title": "metadata object contains values needed for vitals file.",
          "description": "This will contain details about your component.",
          "default": {},
          "examples": [
            {
              "askId": [
                "AIDE_#######",
                "UHGWM###-######"
              ],
              "caAgileId": "poc",
              "projectKey": "com.ranma2913.yourapp.yourcomponent",
              "projectFriendlyName": "yourapp-yourcomponent",
              "componentType": "code",
              "targetQG": "GATE_00"
            },
            {
              "askId": "AIDE_#######",
              "caAgileId": "poc",
              "projectKey": "com.ranma2913.yourapp.yourcomponent",
              "projectFriendlyName": "yourapp-yourcomponent",
              "componentType": "code",
              "targetQG": "GATE_00"
            },
            {
              "askId": null,
              "caAgileId": "poc",
              "projectKey": "com.ranma2913.yourapp.yourcomponent",
              "projectFriendlyName": "yourapp-yourcomponent",
              "componentType": "code",
              "targetQG": "GATE_00"
            }
          ],
          "required": [
            "askId",
            "caAgileId",
            "projectKey",
            "projectFriendlyName",
            "componentType",
            "targetQG"
          ],
          "properties": {
            "askId": {
              "$id": "#/properties/metadata/properties/askId",
              "type": [
                "array",
                "string",
                "null"
              ],
              "title": "askId (AIDE ID)",
              "description": "askId: Enter your ASK ID (examples: UHGWM110-006715 or AIDE_0074671). To look up your ASK ID, you can go here: [AIDE Portal](https://aide.ranma2913.com/) and enter the name of your application in the search box. You will then see a field 'ASK Global Id' where you will see the application's ASK ID. If your project is a proof of concept and does not yet have an ASK ID, you can use 'poc' until your project requests an ASK ID. If the contents of your repository are not associated with an ASK ID, and never will be (example: documentation micro-site that is not application specific, such as appsec.ranma2913.com), you may use the yaml file standard for null values (either null [no quotes] or the single character ~ [no quotes]. If your repository contains code for multiple ASK IDs, use a yaml file list to list the related ASK IDs.",
              "default": "",
              "examples": [
                "UHGWM###-######",
                [
                  "AIDE_#######",
                  "UHGWM###-######"
                ],
                null
              ]
            },
            "caAgileId": {
              "$id": "#/properties/metadata/properties/caAgileId",
              "type": "string",
              "title": "caAgileId (rallyWorkspaceId)",
              "description": "caAgileId: Enter your Rally caAgileId. If you do use Rally to track the User Stories for your project then you can login here and navigate to your project. The URL will look something like this https://rally1.rallydev.com/#/119066050240d/dashboard. The number part of the URL will be your CA Agile ID. In the example above the caAgileId is 119066050240d. If you do NOT use Rally in relation to this repository then just use 'do not use rally or use other system' for this field.",
              "default": "",
              "examples": [
                "119066050240d",
                "poc",
                "do not use rally or use other system"
              ]
            },
            "projectKey": {
              "$id": "#/properties/metadata/properties/projectKey",
              "type": "string",
              "title": "projectKey (sonar id)",
              "description": "projectKey: This should be unique across UHG. If you use Maven then this would be your groupId + colon + artifactId. It is important that you use the same key that is used for your sonar scans. Look at your project page in Sonar and find the \"key\". This is what you should use here. If your repository is not associated with a UHG project, enter a null value here. ",
              "default": "",
              "examples": [
                "com.ranma2913.yourapp:yourcomponent",
                "com.ranma2913.ecm:ecm-webapp",
                "com.ranma2913.ecm:ecm-microservice",
                "com.ranma2913.ecm:ecm-adminui"
              ]
            },
            "projectFriendlyName": {
              "$id": "#/properties/metadata/properties/projectFriendlyName",
              "type": "string",
              "title": "projectFriendlyName (short product Identifier, human readable)",
              "description": "projectFriendlyName: In Maven, the component name would be equivalent to your artifactId in your POM. If your repository is not associated with a UHG project, enter a null value here.",
              "default": "",
              "examples": [
                "yourcomponent",
                "ecm-webapp",
                "ecm-microservice",
                "ecm-adminui"
              ]
            },
            "componentType": {
              "$id": "#/properties/metadata/properties/componentType",
              "type": "string",
              "title": "componentType (primary content type of your repo)",
              "description": "Value code (java, c, go, js, etc), db (sql, etc), iac (infrastructure as code), policy (policy as code), docs (documentation), other (if the contents fit none of the other options.)",
              "default": "",
              "examples": [
                "code",
                "db",
                "iac",
                "policy",
                "docs",
                "other"
              ]
            },
            "targetQG": {
              "$id": "#/properties/metadata/properties/targetQG",
              "type": "string",
              "title": "targetQG (Sonar Quality Gate EOY Target)",
              "description": "This is the Sonar Quality Gate that your team has targeted to achieve by the end of the current year. @see https://sonar.ranma2913.com/quality_gates. Use GATE_EXEMPT for assets (documentation, policy, other) that do not contain application source code or scripts and are not subject to Quality Gating or are not required to utilized SonarQube for quality assurance. If your project is subject to SonarQube quality scanning, but you have not utilized SonarQube, use GATE_00 for now. See Sonar Quality Gates to review the Quality Gates in Sonar.",
              "enum": [
                "GATE_00",
                "GATE_01",
                "GATE_02",
                "GATE_03",
                "GATE_04",
                "GATE_05",
                "GATE_06",
                "GATE_07",
                "GATE_08",
                "GATE_09",
                "GATE_EXEMPT",
                "ADOPTION"
              ],
              "default": "",
              "examples": [
                "GATE_00"
              ]
            }
          },
          "additionalProperties": true
        }
      }
    }
  ],
  "additionalProperties": true
}
